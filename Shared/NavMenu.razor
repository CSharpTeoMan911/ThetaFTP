@inject IJSRuntime JS;
@inject NavigationManager NavigationManager;

<nav class="navbar navbar-expand-lg navbar-light bg-light">
    <div class="container-fluid">
        <a class="navbar-brand" href="#">
            <img alt="Logo" width="30" height="24" class="d-inline-block align-text-top" src="./images/ThetaDrive logo.png" style="height:80px;width:120px;">
        </a>
        <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
            <span class="navbar-toggler-icon"></span>
        </button>
        <div class="collapse navbar-collapse" id="navbarNav">
            <ul class="navbar-nav">
                <li class="nav-item">
                    <a class="nav-link active menu_label" style="margin-bottom:10px;margin-left:15px;color:#055ca5" aria-current="page" href="#">Files</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link menu_label" style="margin-top:16px;margin-left:15px;" href="#">@AuthState</a>
                </li>
            </ul>
        </div>
    </div>
</nav>

@code {
    private string AuthState { get; set; } = "Log out";

    protected override async void OnAfterRender(bool firstRender)
    {
        base.OnAfterRender(firstRender);
        string? AuthCache = null;

        try
        {
            IJSObjectReference module = await JS.InvokeAsync<IJSObjectReference>("import", "./js/functions.js");
            AuthCache = await module.InvokeAsync<string>("Get_Cache", "auth", "AuthCache");
        }
        catch{}

        if (AuthCache == null)
        {
            AuthState = "Log in";
            StateHasChanged();
            if (NavigationManager.ToAbsoluteUri("log-in") != new Uri(NavigationManager.Uri))
                NavigationManager.NavigateTo("log-in", false);
        }
        else
        {
            NavigationManager.NavigateTo("log-in", true);
        }

    }
}
