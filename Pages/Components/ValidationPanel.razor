
<FocusPanel style="z-index: 5;">
    <Component>
        <PanelComponent style="margin-top:200px; border: 1px solid black; display">
            <Component>
                <div style="width:100%; display:flex; flex-direction: row-reverse;">
                    <button class="close_button" @onclick=ClosePanel>
                        <img style="height:25px; align-self:center; margin: 0px; padding: 0px;" src="./images/close_button.webp" />
                    </button>
                </div>

                <p class="label" style="color: #2A6691; margin-left: 20px; font-size:20px">
                    @validationInputTopic
                </p>

                <InputSection placeholder=@placeholder defaultValue=@defaultValue isPassword=false inputValue="new InputSection.InputValue(OnInput)" style="padding:8px 20px 20px 20px; max-width: 250px" smallInputFont="true" input_with_button="true">
                    <InputButton>
                        <button class="close_button" style="height: max-content; align-self: center" @onclick=ValidationProcedure>
                            <img style="height:25px; align-self:center; margin: 0px 0px 0px 5px; padding: 0px; justify-self:center;" src="./images/next.webp" />
                        </button>
                    </InputButton>
                </InputSection>

            </Component>
        </PanelComponent>
    </Component>
</FocusPanel>


@code {
    public enum ValidationType
    {
        AccountAuthorisation,
        LogInSessionAuthorisation,
        DirectoryName,
        FileName,
        DeleteAccount,
        UpdatePassword
    }

    public delegate void CloseAccountValidationPanel();
    [Parameter] public CloseAccountValidationPanel? closeAccountValidationPanel { get; set; }

    public delegate void InitiateValidationProcedure(string? code, ValidationType validationType);
    [Parameter] public InitiateValidationProcedure? initiateValidationProcedure { get; set; }

    [Parameter] public string? validationInputTopic { get; set; }

    [Parameter] public ValidationType validationType { get; set; }

    [Parameter] public string? placeholder { get; set; }

    [Parameter] public string? defaultValue { get; set; }

    private string? code;

    private void ClosePanel() => closeAccountValidationPanel?.Invoke();

    private void ValidationProcedure() => initiateValidationProcedure?.Invoke(code, validationType);

    private void OnInput(string? value) => code = value;
}
