@using ThetaFTP.Shared.Models;


<div class="directory_file_item">
    @if (directoryItem?.isDirectory == true)
    {
        <img class="directory_file_type" src="./images/open-folder.webp" />
    }
    else
    {
        <img class="directory_file_type" src="./images/google-docs.webp" />
    }
    <input class="file-item-name" readonly="readonly" value="@directoryItem?.name"/>

    <div class="directory-item-control-div">

        <div class="dropdown">
            <button class="item-menu-button" type="button" data-bs-toggle="dropdown">
                <img style="height: 20px" src="./images/dots.webp" />
            </button>
            <ul class="dropdown-menu">
                <li><a class="dropdown-item" href="" @onclick=@(()=>FileOperationMethod(FileOperation.Details))>Details</a></li>
                @if(directoryItem?.isDirectory == false)
                {
                    <li><a class="dropdown-item" href="" @onclick=@(()=>FileOperationMethod(FileOperation.Download))>Download</a></li>
                }
                else
                {
                    <li><a class="dropdown-item" href="" @onclick=@(()=>FileOperationMethod(FileOperation.Download))>Open</a></li>
                }
                <li><a class="dropdown-item" href="" @onclick=@(()=>FileOperationMethod(FileOperation.Rename))>Rename</a></li>
                <li><a class="dropdown-item" href="" @onclick=@(()=>FileOperationMethod(FileOperation.Move))>Move</a></li>
                <li><a class="dropdown-item" href="" @onclick=@(()=>FileOperationMethod(FileOperation.Delete))>Delete</a></li>
            </ul>
        </div>

        @if (directoryItem?.isDirectory == false)
        {
            <p class="directory-item-size">
                @GetSize()
            </p>
        }
    </div>
</div>
<div class="separator"></div>

@code {

    public enum FileOperation
    {
        Details,
        Download,
        Rename,
        Move,
        Delete
    }

    [Parameter] public DirectoryItem? directoryItem { get; set; }

    public delegate void FileOperationDelegate(FileOperation fileOperation, DirectoryItem? directoryItem);

    [Parameter] public FileOperationDelegate? operationDelegate { get; set; }

    private void FileOperationMethod(FileOperation fileOperation) => operationDelegate?.Invoke(fileOperation, directoryItem);

    private string GetSize()
    {
        double size = 0;
        if (directoryItem != null)
            size = ((double)directoryItem.size / (double)1048576);

        return $"{size.ToString("F3")} MB";
    }
}
